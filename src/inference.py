# Main imports
from torchvision import models
import torch

# rel. imports
from .preprocess import transform_image

# model path and import
MODEL_PATH = "./models/resnet_1590357366.pt"

# load n prime
model = torch.load(MODEL_PATH, map_location=torch.device("cpu"))
model.eval()

# Labels Map # TODO: be less sloppy. Use a .json file generated by dataloaders
labels = {
    "0": "iphone_charger",
    "1": "microphone_female",
    "2": "microphone_male",
    "3": "power_female",
    "4": "power_male",
    "5": "usb_A",
    "6": "usb_B",
}

# get a prediction
def get_prediction(image_bytes):
    tensor = transform_image(image_bytes=image_bytes)
    outputs = model.forward(tensor)
    _, y_hat = outputs.max(1)
    predicted_idx = str(y_hat.item())
    return predicted_idx, labels[predicted_idx]
